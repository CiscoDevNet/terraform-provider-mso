2020/05/06 11:28:38 [INFO] Terraform version: 0.12.21  
2020/05/06 11:28:38 [INFO] Go runtime version: go1.12.13
2020/05/06 11:28:38 [INFO] CLI args: []string{"/Users/nirav.katarmal/go/bin/terraform", "init"}
2020/05/06 11:28:38 [DEBUG] Attempting to open CLI config file: /Users/nirav.katarmal/.terraformrc
2020/05/06 11:28:38 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/05/06 11:28:38 [INFO] CLI command args: []string{"init"}
2020/05/06 11:28:38 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/05/06 11:28:38 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/05/06 11:28:38 [DEBUG] New state was assigned lineage "71372a04-024a-9c0d-d843-8910a11e23bf"
2020/05/06 11:28:38 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/05/06 11:28:38 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/05/06 11:28:38 [DEBUG] checking for provider in "."
2020/05/06 11:28:38 [DEBUG] checking for provider in "/Users/nirav.katarmal/go/bin"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-aci"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-aws"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-constellix"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-dme"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-mso"
2020/05/06 11:28:38 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "mso", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-mso"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "aci", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-aci"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "aws", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-aws"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "constellix", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-constellix"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "dme", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-dme"
2020/05/06 11:28:38 [DEBUG] checking for provisioner in "."
2020/05/06 11:28:38 [DEBUG] checking for provisioner in "/Users/nirav.katarmal/go/bin"
2020/05/06 11:28:38 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/05/06 11:28:38 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/05/06 11:28:38 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/05/06 11:28:38 [TRACE] statemgr.Filesystem: reading initial snapshot from terraform.tfstate
2020/05/06 11:28:38 [TRACE] statemgr.Filesystem: read snapshot with lineage "81e8f5bb-ae21-6e8c-b2a3-b4af67e815da" serial 1
2020/05/06 11:28:38 [DEBUG] checking for provider in "."
2020/05/06 11:28:38 [DEBUG] checking for provider in "/Users/nirav.katarmal/go/bin"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-aci"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-aws"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-constellix"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-dme"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-mso"
2020/05/06 11:28:38 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "aci", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-aci"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "aws", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-aws"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "constellix", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-constellix"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "dme", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-dme"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "mso", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-mso"
2020/05/06 11:28:38 [DEBUG] plugin requirements: "mso"=""
2020/05/06 11:28:38 [DEBUG] checking for provider in "."
2020/05/06 11:28:38 [DEBUG] checking for provider in "/Users/nirav.katarmal/go/bin"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-aci"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-aws"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-constellix"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-dme"
2020/05/06 11:28:38 [WARN] found legacy provider "terraform-provider-mso"
2020/05/06 11:28:38 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "aci", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-aci"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "aws", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-aws"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "constellix", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-constellix"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "dme", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-dme"
2020/05/06 11:28:38 [DEBUG] found valid plugin: "mso", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-mso"
2020/05/06 11:28:38 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/05/06 11:28:41 [INFO] Terraform version: 0.12.21  
2020/05/06 11:28:41 [INFO] Go runtime version: go1.12.13
2020/05/06 11:28:41 [INFO] CLI args: []string{"/Users/nirav.katarmal/go/bin/terraform", "apply"}
2020/05/06 11:28:41 [DEBUG] Attempting to open CLI config file: /Users/nirav.katarmal/.terraformrc
2020/05/06 11:28:41 [DEBUG] File doesn't exist, but doesn't need to. Ignoring.
2020/05/06 11:28:41 [INFO] CLI command args: []string{"apply"}
2020/05/06 11:28:41 [TRACE] Meta.Backend: no config given or present on disk, so returning nil config
2020/05/06 11:28:41 [TRACE] Meta.Backend: backend has not previously been initialized in this working directory
2020/05/06 11:28:41 [DEBUG] New state was assigned lineage "90ef631a-e75b-3b04-1ea8-6ff5618e7091"
2020/05/06 11:28:41 [TRACE] Meta.Backend: using default local state only (no backend configuration, and no existing initialized backend)
2020/05/06 11:28:41 [TRACE] Meta.Backend: instantiated backend of type <nil>
2020/05/06 11:28:41 [DEBUG] checking for provider in "."
2020/05/06 11:28:41 [DEBUG] checking for provider in "/Users/nirav.katarmal/go/bin"
2020/05/06 11:28:41 [WARN] found legacy provider "terraform-provider-aci"
2020/05/06 11:28:41 [WARN] found legacy provider "terraform-provider-aws"
2020/05/06 11:28:41 [WARN] found legacy provider "terraform-provider-constellix"
2020/05/06 11:28:41 [WARN] found legacy provider "terraform-provider-dme"
2020/05/06 11:28:41 [WARN] found legacy provider "terraform-provider-mso"
2020/05/06 11:28:41 [DEBUG] checking for provider in ".terraform/plugins/darwin_amd64"
2020/05/06 11:28:41 [DEBUG] found valid plugin: "aci", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-aci"
2020/05/06 11:28:41 [DEBUG] found valid plugin: "aws", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-aws"
2020/05/06 11:28:41 [DEBUG] found valid plugin: "constellix", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-constellix"
2020/05/06 11:28:41 [DEBUG] found valid plugin: "dme", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-dme"
2020/05/06 11:28:41 [DEBUG] found valid plugin: "mso", "0.0.0", "/Users/nirav.katarmal/go/bin/terraform-provider-mso"
2020/05/06 11:28:41 [DEBUG] checking for provisioner in "."
2020/05/06 11:28:41 [DEBUG] checking for provisioner in "/Users/nirav.katarmal/go/bin"
2020/05/06 11:28:41 [DEBUG] checking for provisioner in ".terraform/plugins/darwin_amd64"
2020/05/06 11:28:41 [TRACE] Meta.Backend: backend <nil> does not support operations, so wrapping it in a local backend
2020/05/06 11:28:41 [INFO] backend/local: starting Apply operation
2020/05/06 11:28:41 [TRACE] backend/local: requesting state manager for workspace "default"
2020/05/06 11:28:41 [TRACE] backend/local: state manager for workspace "default" will:
 - read initial snapshot from terraform.tfstate
 - write new snapshots to terraform.tfstate
 - create any backup at terraform.tfstate.backup
2020/05/06 11:28:41 [TRACE] backend/local: requesting state lock for workspace "default"
2020/05/06 11:28:41 [TRACE] statemgr.Filesystem: preparing to manage state snapshots at terraform.tfstate
2020/05/06 11:28:41 [TRACE] statemgr.Filesystem: existing snapshot has lineage "81e8f5bb-ae21-6e8c-b2a3-b4af67e815da" serial 1
2020/05/06 11:28:41 [TRACE] statemgr.Filesystem: locking terraform.tfstate using fcntl flock
2020/05/06 11:28:41 [TRACE] statemgr.Filesystem: writing lock metadata to .terraform.tfstate.lock.info
2020/05/06 11:28:41 [TRACE] backend/local: reading remote state for workspace "default"
2020/05/06 11:28:41 [TRACE] statemgr.Filesystem: reading latest snapshot from terraform.tfstate
2020/05/06 11:28:41 [TRACE] statemgr.Filesystem: read snapshot with lineage "81e8f5bb-ae21-6e8c-b2a3-b4af67e815da" serial 1
2020/05/06 11:28:41 [TRACE] backend/local: retrieving local state snapshot for workspace "default"
2020/05/06 11:28:41 [TRACE] backend/local: building context for current working directory
2020/05/06 11:28:41 [TRACE] terraform.NewContext: starting
2020/05/06 11:28:41 [TRACE] terraform.NewContext: resolving provider version selections
2020/05/06 11:28:41 [TRACE] terraform.NewContext: loading provider schemas
2020/05/06 11:28:41 [TRACE] LoadSchemas: retrieving schema for provider type "mso"
2020-05-06T11:28:41.676+0530 [INFO]  plugin: configuring client automatic mTLS
2020-05-06T11:28:41.739+0530 [DEBUG] plugin: starting plugin: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso args=[/Users/nirav.katarmal/go/bin/terraform-provider-mso]
2020-05-06T11:28:41.743+0530 [DEBUG] plugin: plugin started: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso pid=60907
2020-05-06T11:28:41.743+0530 [DEBUG] plugin: waiting for RPC address: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso
2020-05-06T11:28:42.725+0530 [INFO]  plugin.terraform-provider-mso: configuring server automatic mTLS: timestamp=2020-05-06T11:28:42.724+0530
2020-05-06T11:28:42.774+0530 [DEBUG] plugin: using plugin: version=5
2020-05-06T11:28:42.776+0530 [DEBUG] plugin.terraform-provider-mso: plugin address: address=/var/folders/9r/n9wy2k4n00xgzd3vwwg2dl7572n7lr/T/plugin740755678 network=unix timestamp=2020-05-06T11:28:42.774+0530
2020/05/06 11:28:42 [TRACE] GRPCProvider: GetSchema
2020/05/06 11:28:42 [TRACE] GRPCProvider: Close
2020-05-06T11:28:42.922+0530 [DEBUG] plugin: plugin process exited: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso pid=60907
2020-05-06T11:28:42.923+0530 [DEBUG] plugin: plugin exited
2020/05/06 11:28:42 [TRACE] terraform.NewContext: complete
2020/05/06 11:28:42 [TRACE] backend/local: finished building terraform.Context
2020/05/06 11:28:42 [TRACE] backend/local: requesting interactive input, if necessary
2020/05/06 11:28:42 [TRACE] Context.Input: Prompting for provider arguments
2020/05/06 11:28:42 [TRACE] Context.Input: Provider provider.mso declared at main.tf:1,1-15
2020/05/06 11:28:42 [TRACE] Context.Input: Input for provider.mso: map[string]cty.Value{}
2020/05/06 11:28:42 [TRACE] backend/local: running validation operation
2020/05/06 11:28:42 [INFO] terraform: building graph: GraphTypeValidate
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/05/06 11:28:42 [TRACE] ConfigTransformer: Starting for path: 
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
  ------
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.StateTransformer
2020/05/06 11:28:42 [TRACE] StateTransformer: state is empty, so nothing to do
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/05/06 11:28:42 [TRACE] AttachResourceConfigTransformer: attaching to "mso_schema_template_filter_entry.filter_entry" (*terraform.NodeValidatableResource) config from main.tf:8,1-59
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/05/06 11:28:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/05/06 11:28:42 [TRACE] ProviderConfigTransformer: attaching to "provider.mso" provider configuration from main.tf:1,1-15
2020/05/06 11:28:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/05/06 11:28:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/05/06 11:28:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/05/06 11:28:42 [TRACE] ProviderTransformer: mso_schema_template_filter_entry.filter_entry is provided by provider.mso or inherited equivalent
2020/05/06 11:28:42 [TRACE] ProviderTransformer: exact match for provider.mso serving mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:42 [DEBUG] ProviderTransformer: "mso_schema_template_filter_entry.filter_entry" (*terraform.NodeValidatableResource) needs provider.mso
2020/05/06 11:28:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/05/06 11:28:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/05/06 11:28:42 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/05/06 11:28:42 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/05/06 11:28:42 [TRACE] AttachSchemaTransformer: attaching resource schema to mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:42 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.mso
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/05/06 11:28:42 [DEBUG] ReferenceTransformer: "mso_schema_template_filter_entry.filter_entry" references: []
2020/05/06 11:28:42 [DEBUG] ReferenceTransformer: "provider.mso" references: []
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  provider.mso (close) - *terraform.graphNodeCloseProvider
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
    provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.RootTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  provider.mso (close) - *terraform.graphNodeCloseProvider
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
    provider.mso - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.mso (close) - *terraform.graphNodeCloseProvider
  ------
2020/05/06 11:28:42 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/05/06 11:28:42 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  provider.mso (close) - *terraform.graphNodeCloseProvider
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeValidatableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.mso (close) - *terraform.graphNodeCloseProvider
  ------
2020/05/06 11:28:42 [DEBUG] Starting graph walk: walkValidate
2020/05/06 11:28:42 [TRACE] dag/walk: updating graph
2020/05/06 11:28:42 [TRACE] dag/walk: added new vertex: "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:42 [TRACE] dag/walk: added new vertex: "provider.mso"
2020/05/06 11:28:42 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/05/06 11:28:42 [TRACE] dag/walk: added new vertex: "provider.mso (close)"
2020/05/06 11:28:42 [TRACE] dag/walk: added new vertex: "root"
2020/05/06 11:28:42 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/05/06 11:28:42 [TRACE] dag/walk: added edge: "mso_schema_template_filter_entry.filter_entry" waiting on "provider.mso"
2020/05/06 11:28:42 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:42 [TRACE] dag/walk: added edge: "provider.mso (close)" waiting on "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:42 [TRACE] dag/walk: added edge: "root" waiting on "provider.mso (close)"
2020/05/06 11:28:42 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/05/06 11:28:42 [TRACE] dag/walk: dependencies changed for "provider.mso (close)", sending new deps
2020/05/06 11:28:42 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/05/06 11:28:42 [TRACE] dag/walk: dependencies changed for "mso_schema_template_filter_entry.filter_entry", sending new deps
2020/05/06 11:28:42 [TRACE] dag/walk: visiting "provider.mso"
2020/05/06 11:28:42 [TRACE] vertex "provider.mso": starting visit (*terraform.NodeApplyableProvider)
2020/05/06 11:28:42 [TRACE] vertex "provider.mso": evaluating
2020/05/06 11:28:42 [TRACE] [walkValidate] Entering eval tree: provider.mso
2020/05/06 11:28:42 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/06 11:28:42 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-05-06T11:28:42.940+0530 [INFO]  plugin: configuring client automatic mTLS
2020-05-06T11:28:42.985+0530 [DEBUG] plugin: starting plugin: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso args=[/Users/nirav.katarmal/go/bin/terraform-provider-mso]
2020-05-06T11:28:42.991+0530 [DEBUG] plugin: plugin started: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso pid=60910
2020-05-06T11:28:42.991+0530 [DEBUG] plugin: waiting for RPC address: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso
2020-05-06T11:28:43.017+0530 [INFO]  plugin.terraform-provider-mso: configuring server automatic mTLS: timestamp=2020-05-06T11:28:43.016+0530
2020-05-06T11:28:43.068+0530 [DEBUG] plugin.terraform-provider-mso: plugin address: address=/var/folders/9r/n9wy2k4n00xgzd3vwwg2dl7572n7lr/T/plugin551202165 network=unix timestamp=2020-05-06T11:28:43.067+0530
2020-05-06T11:28:43.068+0530 [DEBUG] plugin: using plugin: version=5
2020/05/06 11:28:43 [TRACE] BuiltinEvalContext: Initialized "mso" provider for provider.mso
2020/05/06 11:28:43 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalValidateProvider
2020/05/06 11:28:43 [TRACE] buildProviderConfig for provider.mso: using explicit config only
2020/05/06 11:28:43 [TRACE] GRPCProvider: GetSchema
2020/05/06 11:28:43 [TRACE] GRPCProvider: PrepareProviderConfig
2020/05/06 11:28:43 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/06 11:28:43 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/06 11:28:43 [TRACE] [walkValidate] Exiting eval tree: provider.mso
2020/05/06 11:28:43 [TRACE] vertex "provider.mso": visit complete
2020/05/06 11:28:43 [TRACE] dag/walk: visiting "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": starting visit (*terraform.NodeValidatableResource)
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": evaluating
2020/05/06 11:28:43 [TRACE] [walkValidate] Entering eval tree: mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalValidateResource
2020/05/06 11:28:43 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/05/06 11:28:43 [TRACE] [walkValidate] Exiting eval tree: mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": visit complete
2020/05/06 11:28:43 [TRACE] dag/walk: visiting "provider.mso (close)"
2020/05/06 11:28:43 [TRACE] vertex "provider.mso (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/05/06 11:28:43 [TRACE] vertex "provider.mso (close)": evaluating
2020/05/06 11:28:43 [TRACE] [walkValidate] Entering eval tree: provider.mso (close)
2020/05/06 11:28:43 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/05/06 11:28:43 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/05/06 11:28:43 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/05/06 11:28:43 [TRACE] [walkValidate] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/05/06 11:28:43 [TRACE] GRPCProvider: Close
2020/05/06 11:28:43 [TRACE] [walkValidate] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/05/06 11:28:43 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-05-06T11:28:43.206+0530 [DEBUG] plugin: plugin process exited: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso pid=60910
2020-05-06T11:28:43.206+0530 [DEBUG] plugin: plugin exited
2020/05/06 11:28:43 [TRACE] [walkValidate] Exiting eval tree: provider.mso (close)
2020/05/06 11:28:43 [TRACE] vertex "provider.mso (close)": visit complete
2020/05/06 11:28:43 [TRACE] dag/walk: visiting "root"
2020/05/06 11:28:43 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/05/06 11:28:43 [TRACE] vertex "root": visit complete
2020/05/06 11:28:43 [INFO] backend/local: apply calling Refresh
2020/05/06 11:28:43 [INFO] terraform: building graph: GraphTypeRefresh
2020/05/06 11:28:43 [TRACE] No managed resources in state during refresh; skipping managed resource transformer
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/05/06 11:28:43 [TRACE] ConfigTransformer: Starting for path: 
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.ConfigTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.StateTransformer
2020/05/06 11:28:43 [TRACE] StateTransformer: state is empty, so nothing to do
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/05/06 11:28:43 [TRACE] ProviderConfigTransformer: attaching to "provider.mso" provider configuration from main.tf:1,1-15
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer (no changes)
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/05/06 11:28:43 [DEBUG] pruning unused provider.mso
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer with new graph:
  ------
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.graphTransformerMulti (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.CloseProviderTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.RootTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  root - terraform.graphNodeRoot
  ------
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer (no changes)
2020/05/06 11:28:43 [DEBUG] Starting graph walk: walkRefresh
2020/05/06 11:28:43 [TRACE] dag/walk: updating graph
2020/05/06 11:28:43 [TRACE] dag/walk: added new vertex: "root"
2020/05/06 11:28:43 [TRACE] dag/walk: visiting "root"
2020/05/06 11:28:43 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/05/06 11:28:43 [TRACE] vertex "root": visit complete
2020/05/06 11:28:43 [INFO] backend/local: apply calling Plan
2020/05/06 11:28:43 [INFO] terraform: building graph: GraphTypePlan
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/05/06 11:28:43 [TRACE] ConfigTransformer: Starting for path: 
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
  ------
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.OrphanResourceInstanceTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.OrphanResourceInstanceTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.StateTransformer
2020/05/06 11:28:43 [TRACE] StateTransformer: state is empty, so nothing to do
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.StateTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/05/06 11:28:43 [TRACE] AttachResourceConfigTransformer: attaching to "mso_schema_template_filter_entry.filter_entry" (*terraform.NodePlannableResource) config from main.tf:8,1-59
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/05/06 11:28:43 [TRACE] ProviderConfigTransformer: attaching to "provider.mso" provider configuration from main.tf:1,1-15
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/05/06 11:28:43 [TRACE] ProviderTransformer: mso_schema_template_filter_entry.filter_entry is provided by provider.mso or inherited equivalent
2020/05/06 11:28:43 [TRACE] ProviderTransformer: exact match for provider.mso serving mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [DEBUG] ProviderTransformer: "mso_schema_template_filter_entry.filter_entry" (*terraform.NodePlannableResource) needs provider.mso
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/05/06 11:28:43 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/05/06 11:28:43 [TRACE] AttachSchemaTransformer: attaching resource schema to mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.mso
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/05/06 11:28:43 [DEBUG] ReferenceTransformer: "provider.mso" references: []
2020/05/06 11:28:43 [DEBUG] ReferenceTransformer: "mso_schema_template_filter_entry.filter_entry" references: []
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.ForcedCBDTransformer
2020/05/06 11:28:43 [TRACE] ForcedCBDTransformer: "mso_schema_template_filter_entry.filter_entry" (*terraform.NodePlannableResource) has no CBD descendent, so skipping
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.ForcedCBDTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  provider.mso (close) - *terraform.graphNodeCloseProvider
    mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
    provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.RootTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  provider.mso (close) - *terraform.graphNodeCloseProvider
    mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
    provider.mso - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.mso (close) - *terraform.graphNodeCloseProvider
  ------
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
  mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  provider.mso (close) - *terraform.graphNodeCloseProvider
    mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResource
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.mso (close) - *terraform.graphNodeCloseProvider
  ------
2020/05/06 11:28:43 [DEBUG] Starting graph walk: walkPlan
2020/05/06 11:28:43 [TRACE] dag/walk: updating graph
2020/05/06 11:28:43 [TRACE] dag/walk: added new vertex: "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:43 [TRACE] dag/walk: added new vertex: "provider.mso"
2020/05/06 11:28:43 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/05/06 11:28:43 [TRACE] dag/walk: added new vertex: "provider.mso (close)"
2020/05/06 11:28:43 [TRACE] dag/walk: added new vertex: "root"
2020/05/06 11:28:43 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/05/06 11:28:43 [TRACE] dag/walk: added edge: "root" waiting on "provider.mso (close)"
2020/05/06 11:28:43 [TRACE] dag/walk: added edge: "mso_schema_template_filter_entry.filter_entry" waiting on "provider.mso"
2020/05/06 11:28:43 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:43 [TRACE] dag/walk: added edge: "provider.mso (close)" waiting on "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:43 [TRACE] dag/walk: dependencies changed for "provider.mso (close)", sending new deps
2020/05/06 11:28:43 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/05/06 11:28:43 [TRACE] dag/walk: dependencies changed for "mso_schema_template_filter_entry.filter_entry", sending new deps
2020/05/06 11:28:43 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/05/06 11:28:43 [TRACE] dag/walk: visiting "provider.mso"
2020/05/06 11:28:43 [TRACE] vertex "provider.mso": starting visit (*terraform.NodeApplyableProvider)
2020/05/06 11:28:43 [TRACE] vertex "provider.mso": evaluating
2020/05/06 11:28:43 [TRACE] [walkPlan] Entering eval tree: provider.mso
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-05-06T11:28:43.213+0530 [INFO]  plugin: configuring client automatic mTLS
2020-05-06T11:28:43.258+0530 [DEBUG] plugin: starting plugin: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso args=[/Users/nirav.katarmal/go/bin/terraform-provider-mso]
2020-05-06T11:28:43.262+0530 [DEBUG] plugin: plugin started: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso pid=60911
2020-05-06T11:28:43.262+0530 [DEBUG] plugin: waiting for RPC address: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso
2020-05-06T11:28:43.292+0530 [INFO]  plugin.terraform-provider-mso: configuring server automatic mTLS: timestamp=2020-05-06T11:28:43.292+0530
2020-05-06T11:28:43.344+0530 [DEBUG] plugin: using plugin: version=5
2020-05-06T11:28:43.345+0530 [DEBUG] plugin.terraform-provider-mso: plugin address: address=/var/folders/9r/n9wy2k4n00xgzd3vwwg2dl7572n7lr/T/plugin294264850 network=unix timestamp=2020-05-06T11:28:43.344+0530
2020/05/06 11:28:43 [TRACE] BuiltinEvalContext: Initialized "mso" provider for provider.mso
2020/05/06 11:28:43 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/06 11:28:43 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/05/06 11:28:43 [TRACE] buildProviderConfig for provider.mso: using explicit config only
2020/05/06 11:28:43 [TRACE] GRPCProvider: GetSchema
2020/05/06 11:28:43 [TRACE] GRPCProvider: Configure
2020/05/06 11:28:43 [TRACE] [walkPlan] Exiting eval tree: provider.mso
2020/05/06 11:28:43 [TRACE] vertex "provider.mso": visit complete
2020/05/06 11:28:43 [TRACE] dag/walk: visiting "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": starting visit (*terraform.NodePlannableResource)
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": evaluating
2020/05/06 11:28:43 [TRACE] [walkPlan] Entering eval tree: mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/05/06 11:28:43 [TRACE] [walkPlan] Exiting eval tree: mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": expanding dynamic subgraph
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.ResourceCountTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.ResourceCountTransformer with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodePlannableResourceInstance
  ------
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.OrphanResourceCountTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.OrphanResourceCountTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/05/06 11:28:43 [DEBUG] Resource instance state not found for node "mso_schema_template_filter_entry.filter_entry", instance mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/05/06 11:28:43 [DEBUG] ReferenceTransformer: "mso_schema_template_filter_entry.filter_entry" references: []
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/05/06 11:28:43 [TRACE] Executing graph transform *terraform.RootTransformer
2020/05/06 11:28:43 [TRACE] Completed graph transform *terraform.RootTransformer (no changes)
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": entering dynamic subgraph
2020/05/06 11:28:43 [TRACE] dag/walk: updating graph
2020/05/06 11:28:43 [TRACE] dag/walk: added new vertex: "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:43 [TRACE] dag/walk: visiting "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": starting visit (*terraform.NodePlannableResourceInstance)
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": evaluating
2020/05/06 11:28:43 [TRACE] [walkPlan] Entering eval tree: mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalReadState
2020/05/06 11:28:43 [TRACE] EvalReadState: reading state for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] EvalReadState: no state present for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalValidateSelfRef
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalDiff
2020/05/06 11:28:43 [TRACE] Re-validating config for "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:43 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/05/06 11:28:43 [TRACE] GRPCProvider: PlanResourceChange
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalCheckPreventDestroy
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/05/06 11:28:43 [TRACE] EvalWriteState: writing current state object for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/05/06 11:28:43 [TRACE] EvalWriteDiff: recorded Create change for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] [walkPlan] Exiting eval tree: mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": visit complete
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": dynamic subgraph completed successfully
2020/05/06 11:28:43 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": visit complete
2020/05/06 11:28:43 [TRACE] dag/walk: visiting "provider.mso (close)"
2020/05/06 11:28:43 [TRACE] vertex "provider.mso (close)": starting visit (*terraform.graphNodeCloseProvider)
2020/05/06 11:28:43 [TRACE] vertex "provider.mso (close)": evaluating
2020/05/06 11:28:43 [TRACE] [walkPlan] Entering eval tree: provider.mso (close)
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalCloseProvider
2020/05/06 11:28:43 [TRACE] GRPCProvider: Close
2020/05/06 11:28:43 [TRACE] dag/walk: visiting "meta.count-boundary (EachMode fixup)"
2020/05/06 11:28:43 [TRACE] vertex "meta.count-boundary (EachMode fixup)": starting visit (*terraform.NodeCountBoundary)
2020/05/06 11:28:43 [TRACE] vertex "meta.count-boundary (EachMode fixup)": evaluating
2020/05/06 11:28:43 [TRACE] [walkPlan] Entering eval tree: meta.count-boundary (EachMode fixup)
2020/05/06 11:28:43 [TRACE] <root>: eval: *terraform.EvalCountFixZeroOneBoundaryGlobal
2020/05/06 11:28:43 [TRACE] [walkPlan] Exiting eval tree: meta.count-boundary (EachMode fixup)
2020/05/06 11:28:43 [TRACE] vertex "meta.count-boundary (EachMode fixup)": visit complete
2020-05-06T11:28:43.462+0530 [DEBUG] plugin: plugin process exited: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso pid=60911
2020-05-06T11:28:43.462+0530 [DEBUG] plugin: plugin exited
2020/05/06 11:28:43 [TRACE] [walkPlan] Exiting eval tree: provider.mso (close)
2020/05/06 11:28:43 [TRACE] vertex "provider.mso (close)": visit complete
2020/05/06 11:28:43 [TRACE] dag/walk: visiting "root"
2020/05/06 11:28:43 [TRACE] vertex "root": starting visit (terraform.graphNodeRoot)
2020/05/06 11:28:43 [TRACE] vertex "root": visit complete
2020/05/06 11:28:43 [DEBUG] command: asking for input: "Do you want to perform these actions?"
2020/05/06 11:28:45 [INFO] backend/local: apply calling Apply
2020/05/06 11:28:45 [INFO] terraform: building graph: GraphTypeApply
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.ConfigTransformer
2020/05/06 11:28:45 [TRACE] ConfigTransformer: Starting for path: 
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.ConfigTransformer with new graph:
  mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
  ------
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.DiffTransformer
2020/05/06 11:28:45 [TRACE] DiffTransformer starting
2020/05/06 11:28:45 [TRACE] DiffTransformer: found Create change for mso_schema_template_filter_entry.filter_entry 
2020/05/06 11:28:45 [TRACE] DiffTransformer: mso_schema_template_filter_entry.filter_entry will be represented by mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:45 [TRACE] DiffTransformer complete
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.DiffTransformer with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
  mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
  ------
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.OrphanResourceTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.OrphanResourceTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.OrphanOutputTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.OrphanOutputTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.AttachResourceConfigTransformer
2020/05/06 11:28:45 [TRACE] AttachResourceConfigTransformer: attaching to "mso_schema_template_filter_entry.filter_entry (prepare state)" (*terraform.NodeApplyableResource) config from main.tf:8,1-59
2020/05/06 11:28:45 [TRACE] AttachResourceConfigTransformer: attaching to "mso_schema_template_filter_entry.filter_entry" (*terraform.NodeApplyableResourceInstance) config from main.tf:8,1-59
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.AttachResourceConfigTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.AttachStateTransformer
2020/05/06 11:28:45 [DEBUG] Resource state not found for node "mso_schema_template_filter_entry.filter_entry", instance mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.AttachStateTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.MissingProvisionerTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.MissingProvisionerTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.ProvisionerTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.ProvisionerTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.RootVariableTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.RootVariableTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.LocalTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.LocalTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.OutputTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.OutputTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.ModuleVariableTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.ModuleVariableTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.graphTransformerMulti
2020/05/06 11:28:45 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderConfigTransformer
2020/05/06 11:28:45 [TRACE] ProviderConfigTransformer: attaching to "provider.mso" provider configuration from main.tf:1,1-15
2020/05/06 11:28:45 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderConfigTransformer with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
  mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:45 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.MissingProviderTransformer
2020/05/06 11:28:45 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.MissingProviderTransformer (no changes)
2020/05/06 11:28:45 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ProviderTransformer
2020/05/06 11:28:45 [TRACE] ProviderTransformer: mso_schema_template_filter_entry.filter_entry (prepare state) is provided by provider.mso or inherited equivalent
2020/05/06 11:28:45 [TRACE] ProviderTransformer: mso_schema_template_filter_entry.filter_entry is provided by provider.mso or inherited equivalent
2020/05/06 11:28:45 [TRACE] ProviderTransformer: exact match for provider.mso serving mso_schema_template_filter_entry.filter_entry (prepare state)
2020/05/06 11:28:45 [DEBUG] ProviderTransformer: "mso_schema_template_filter_entry.filter_entry (prepare state)" (*terraform.NodeApplyableResource) needs provider.mso
2020/05/06 11:28:45 [TRACE] ProviderTransformer: exact match for provider.mso serving mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:45 [DEBUG] ProviderTransformer: "mso_schema_template_filter_entry.filter_entry" (*terraform.NodeApplyableResourceInstance) needs provider.mso
2020/05/06 11:28:45 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ProviderTransformer with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:45 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.PruneProviderTransformer
2020/05/06 11:28:45 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.PruneProviderTransformer (no changes)
2020/05/06 11:28:45 [TRACE] (graphTransformerMulti) Executing graph transform *terraform.ParentProviderTransformer
2020/05/06 11:28:45 [TRACE] (graphTransformerMulti) Completed graph transform *terraform.ParentProviderTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.graphTransformerMulti with new graph:
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.RemovedModuleTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.RemovedModuleTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.AttachSchemaTransformer
2020/05/06 11:28:45 [TRACE] AttachSchemaTransformer: attaching resource schema to mso_schema_template_filter_entry.filter_entry (prepare state)
2020/05/06 11:28:45 [TRACE] AttachSchemaTransformer: attaching resource schema to mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:45 [TRACE] AttachSchemaTransformer: attaching provider config schema to provider.mso
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.AttachSchemaTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.ReferenceTransformer
2020/05/06 11:28:45 [DEBUG] ReferenceTransformer: "mso_schema_template_filter_entry.filter_entry (prepare state)" references: []
2020/05/06 11:28:45 [DEBUG] ReferenceTransformer: "mso_schema_template_filter_entry.filter_entry" references: []
2020/05/06 11:28:45 [DEBUG] ReferenceTransformer: "provider.mso" references: []
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.ReferenceTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.AttachDependenciesTransformer
2020/05/06 11:28:45 [TRACE] AttachDependenciesTransformer: mso_schema_template_filter_entry.filter_entry depends on []
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.AttachDependenciesTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.DestroyEdgeTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.DestroyEdgeTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.CBDEdgeTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.CBDEdgeTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.PruneUnusedValuesTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.PruneUnusedValuesTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.CountBoundaryTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.CountBoundaryTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.TargetsTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.TargetsTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.CloseProviderTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.CloseProviderTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  provider.mso (close) - *terraform.graphNodeCloseProvider
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  ------
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.CloseProvisionerTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.CloseProvisionerTransformer (no changes)
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.RootTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.RootTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  provider.mso (close) - *terraform.graphNodeCloseProvider
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.mso (close) - *terraform.graphNodeCloseProvider
  ------
2020/05/06 11:28:45 [TRACE] Executing graph transform *terraform.TransitiveReductionTransformer
2020/05/06 11:28:45 [TRACE] Completed graph transform *terraform.TransitiveReductionTransformer with new graph:
  meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
  mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
    mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
  mso_schema_template_filter_entry.filter_entry (prepare state) - *terraform.NodeApplyableResource
    provider.mso - *terraform.NodeApplyableProvider
  provider.mso - *terraform.NodeApplyableProvider
  provider.mso (close) - *terraform.graphNodeCloseProvider
    mso_schema_template_filter_entry.filter_entry - *terraform.NodeApplyableResourceInstance
  root - terraform.graphNodeRoot
    meta.count-boundary (EachMode fixup) - *terraform.NodeCountBoundary
    provider.mso (close) - *terraform.graphNodeCloseProvider
  ------
2020/05/06 11:28:45 [DEBUG] Starting graph walk: walkApply
2020/05/06 11:28:45 [TRACE] dag/walk: updating graph
2020/05/06 11:28:45 [TRACE] dag/walk: added new vertex: "mso_schema_template_filter_entry.filter_entry (prepare state)"
2020/05/06 11:28:45 [TRACE] dag/walk: added new vertex: "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:45 [TRACE] dag/walk: added new vertex: "provider.mso"
2020/05/06 11:28:45 [TRACE] dag/walk: added new vertex: "meta.count-boundary (EachMode fixup)"
2020/05/06 11:28:45 [TRACE] dag/walk: added new vertex: "provider.mso (close)"
2020/05/06 11:28:45 [TRACE] dag/walk: added new vertex: "root"
2020/05/06 11:28:45 [TRACE] dag/walk: added edge: "root" waiting on "meta.count-boundary (EachMode fixup)"
2020/05/06 11:28:45 [TRACE] dag/walk: added edge: "mso_schema_template_filter_entry.filter_entry" waiting on "mso_schema_template_filter_entry.filter_entry (prepare state)"
2020/05/06 11:28:45 [TRACE] dag/walk: added edge: "provider.mso (close)" waiting on "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:45 [TRACE] dag/walk: added edge: "root" waiting on "provider.mso (close)"
2020/05/06 11:28:45 [TRACE] dag/walk: added edge: "mso_schema_template_filter_entry.filter_entry (prepare state)" waiting on "provider.mso"
2020/05/06 11:28:45 [TRACE] dag/walk: added edge: "meta.count-boundary (EachMode fixup)" waiting on "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:45 [TRACE] dag/walk: dependencies changed for "mso_schema_template_filter_entry.filter_entry", sending new deps
2020/05/06 11:28:45 [TRACE] dag/walk: dependencies changed for "provider.mso (close)", sending new deps
2020/05/06 11:28:45 [TRACE] dag/walk: dependencies changed for "mso_schema_template_filter_entry.filter_entry (prepare state)", sending new deps
2020/05/06 11:28:45 [TRACE] dag/walk: dependencies changed for "meta.count-boundary (EachMode fixup)", sending new deps
2020/05/06 11:28:45 [TRACE] dag/walk: dependencies changed for "root", sending new deps
2020/05/06 11:28:45 [TRACE] dag/walk: visiting "provider.mso"
2020/05/06 11:28:45 [TRACE] vertex "provider.mso": starting visit (*terraform.NodeApplyableProvider)
2020/05/06 11:28:45 [TRACE] vertex "provider.mso": evaluating
2020/05/06 11:28:45 [TRACE] [walkApply] Entering eval tree: provider.mso
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalInitProvider
2020-05-06T11:28:45.699+0530 [INFO]  plugin: configuring client automatic mTLS
2020-05-06T11:28:45.747+0530 [DEBUG] plugin: starting plugin: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso args=[/Users/nirav.katarmal/go/bin/terraform-provider-mso]
2020-05-06T11:28:45.752+0530 [DEBUG] plugin: plugin started: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso pid=60914
2020-05-06T11:28:45.752+0530 [DEBUG] plugin: waiting for RPC address: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso
2020-05-06T11:28:45.779+0530 [INFO]  plugin.terraform-provider-mso: configuring server automatic mTLS: timestamp=2020-05-06T11:28:45.778+0530
2020-05-06T11:28:45.831+0530 [DEBUG] plugin.terraform-provider-mso: plugin address: address=/var/folders/9r/n9wy2k4n00xgzd3vwwg2dl7572n7lr/T/plugin175575729 network=unix timestamp=2020-05-06T11:28:45.831+0530
2020-05-06T11:28:45.831+0530 [DEBUG] plugin: using plugin: version=5
2020/05/06 11:28:45 [TRACE] BuiltinEvalContext: Initialized "mso" provider for provider.mso
2020/05/06 11:28:45 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/06 11:28:45 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalOpFilter
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalConfigProvider
2020/05/06 11:28:45 [TRACE] buildProviderConfig for provider.mso: using explicit config only
2020/05/06 11:28:45 [TRACE] GRPCProvider: GetSchema
2020/05/06 11:28:45 [TRACE] GRPCProvider: Configure
2020/05/06 11:28:45 [TRACE] [walkApply] Exiting eval tree: provider.mso
2020/05/06 11:28:45 [TRACE] vertex "provider.mso": visit complete
2020/05/06 11:28:45 [TRACE] dag/walk: visiting "mso_schema_template_filter_entry.filter_entry (prepare state)"
2020/05/06 11:28:45 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry (prepare state)": starting visit (*terraform.NodeApplyableResource)
2020/05/06 11:28:45 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry (prepare state)": evaluating
2020/05/06 11:28:45 [TRACE] [walkApply] Entering eval tree: mso_schema_template_filter_entry.filter_entry (prepare state)
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalWriteResourceState
2020/05/06 11:28:45 [TRACE] [walkApply] Exiting eval tree: mso_schema_template_filter_entry.filter_entry (prepare state)
2020/05/06 11:28:45 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry (prepare state)": visit complete
2020/05/06 11:28:45 [TRACE] dag/walk: visiting "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:45 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": starting visit (*terraform.NodeApplyableResourceInstance)
2020/05/06 11:28:45 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": evaluating
2020/05/06 11:28:45 [TRACE] [walkApply] Entering eval tree: mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalSequence
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/05/06 11:28:45 [TRACE] EvalReadDiff: Read Create change from plan for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalIf
2020/05/06 11:28:45 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalIf
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalReadState
2020/05/06 11:28:45 [TRACE] EvalReadState: reading state for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:45 [TRACE] EvalReadState: no state present for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalReadDiff
2020/05/06 11:28:45 [TRACE] EvalReadDiff: Read Create change from plan for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalDiff
2020/05/06 11:28:45 [TRACE] Re-validating config for "mso_schema_template_filter_entry.filter_entry"
2020/05/06 11:28:45 [TRACE] GRPCProvider: ValidateResourceTypeConfig
2020/05/06 11:28:45 [TRACE] GRPCProvider: PlanResourceChange
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalCheckPlannedChange
2020/05/06 11:28:45 [TRACE] EvalCheckPlannedChange: Verifying that actual change (action Create) matches planned change (action Create)
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalGetProvider
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalReadState
2020/05/06 11:28:45 [TRACE] EvalReadState: reading state for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:45 [TRACE] EvalReadState: no state present for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalReduceDiff
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalIf
2020/05/06 11:28:45 [TRACE] <root>: eval: terraform.EvalNoop
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalApplyPre
2020/05/06 11:28:45 [TRACE] <root>: eval: *terraform.EvalApply
2020/05/06 11:28:45 [DEBUG] mso_schema_template_filter_entry.filter_entry: applying the planned Create change
2020/05/06 11:28:45 [TRACE] GRPCProvider: ApplyResourceChange
2020-05-06T11:28:45.942+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:45 [DEBUG] setting computed for "tcp_session_rules" from ComputedKeys
2020-05-06T11:28:45.942+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:45 [DEBUG] Template Anp Epg: Beginning Creation
2020-05-06T11:28:45.942+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:45 HTTP request GET api/v1/schemas/5ea809672c00003bc40a2799
2020-05-06T11:28:45.942+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:45 [DEBUG] Begin Injection
2020-05-06T11:28:45.942+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:45 HTTP request POST /api/v1/auth/login
2020-05-06T11:28:45.942+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:45 HTTP request after injection POST /api/v1/auth/login
2020-05-06T11:28:45.942+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:45 [DEBUG] Begining DO method https://173.36.219.193/api/v1/auth/login
2020-05-06T11:28:47.938+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:47 
2020-05-06T11:28:47.938+0530 [DEBUG] plugin.terraform-provider-mso: HTTP Request: POST https://173.36.219.193/api/v1/auth/login
2020-05-06T11:28:47.938+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:47 nHTTP Response: 201 201 Created &{201 Created 201 HTTP/1.1 1 1 map[Cache-Control:[no-cache] Connection:[keep-alive] Content-Language:[en] Content-Length:[1111] Content-Type:[application/json] Date:[Wed, 06 May 2020 04:30:19 GMT] Expires:[Thu, 01 Jan 1970 00:00:01 GMT] Server:[nginx] Strict-Transport-Security:[max-age=31536000; includeSubDomains] X-Frame-Options:[SAMEORIGIN]] 0xc0003ac740 1111 [] false false map[] 0xc0003c2e00 0xc0003914a0}
2020-05-06T11:28:47.938+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:47 
2020-05-06T11:28:47.938+0530 [DEBUG] plugin.terraform-provider-mso:  HTTP response unique string POST https://173.36.219.193/api/v1/auth/login {"userId":"0000ffff0000000000000020","needsPasswordUpdate":false,"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1ODg3NDA2MTksImlhdCI6MTU4ODczOTQxOSwiaXNzIjoiYmQzMTQ4M2ZhOTQ3NDZkZDgwNTkwYjQ3NDgwOTQ1ZjAiLCJ1c2VySWQiOiIwMDAwZmZmZjAwMDAwMDAwMDAwMDAwMjAiLCJ1c2VybmFtZSI6ImFkbWluIiwicGVybWlzc2lvbnMiOlsidmlldy1zaXRlcyIsInZpZXctdGVuYW50cyIsInZpZXctc2NoZW1hcyIsInZpZXctdGVuYW50LXNjaGVtYXMiLCJ2aWV3LXVzZXJzIiwidmlldy1yb2xlcyIsInZpZXctYWxsLWF1ZGl0LXJlY29yZHMiLCJ2aWV3LWJhY2t1cCIsInZpZXctbGFiZWxzIiwibWFuYWdlLXNpdGVzIiwibWFuYWdlLXRlbmFudHMiLCJtYW5hZ2UtbGFiZWxzIiwibWFuYWdlLXNjaGVtYXMiLCJtYW5hZ2UtdGVuYW50LXNjaGVtYXMiLCJtYW5hZ2UtdXNlcnMiLCJtYW5hZ2Utcm9sZXMiLCJtYW5hZ2UtYXVkaXQtcmVjb3JkcyIsIm1hbmFnZS1iYWNrdXAiLCJtYW5hZ2UtbGFiZWxzIl19.tWydFOk5F4jSt7NJkG0UtqQc1mNAF0o748T5xugwr8Q","permissions":["view-sites","view-tenants","view-schemas","view-tenant-schemas","view-users","view-roles","view-all-audit-records","view-backup","view-labels","manage-sites","manage-tenants","manage-labels","manage-schemas","manage-tenant-schemas","manage-users","manage-roles","manage-audit-records","manage-backup","manage-labels"]}
2020-05-06T11:28:47.938+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:47 [DEBUG] Exit from do method
2020-05-06T11:28:47.938+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:47 HTTP request after injection GET api/v1/schemas/5ea809672c00003bc40a2799
2020-05-06T11:28:47.938+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:47 [DEBUG] Begining DO method https://173.36.219.193/api/v1/schemas/5ea809672c00003bc40a2799
2020-05-06T11:28:48.518+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 
2020-05-06T11:28:48.518+0530 [DEBUG] plugin.terraform-provider-mso: HTTP Request: GET https://173.36.219.193/api/v1/schemas/5ea809672c00003bc40a2799
2020-05-06T11:28:48.518+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 nHTTP Response: 200 200 OK &{200 OK 200 HTTP/1.1 1 1 map[Cache-Control:[no-cache] Connection:[keep-alive] Content-Language:[en] Content-Length:[5714] Content-Type:[application/json] Date:[Wed, 06 May 2020 04:30:20 GMT] Expires:[Thu, 01 Jan 1970 00:00:01 GMT] Server:[nginx] Strict-Transport-Security:[max-age=31536000; includeSubDomains] X-Frame-Options:[SAMEORIGIN]] 0xc00027a8c0 5714 [] false false map[] 0xc0003c2d00 0xc0003914a0}
2020-05-06T11:28:48.519+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 
2020-05-06T11:28:48.519+0530 [DEBUG] plugin.terraform-provider-mso:  HTTP response unique string GET https://173.36.219.193/api/v1/schemas/5ea809672c00003bc40a2799 {"id":"5ea809672c00003bc40a2799","displayName":"niravtest","templates":[{"name":"Template1","displayName":"Template1","tenantId":"5e9d09482c000068500a269a","anps":[{"name":"ap1","displayName":"ap1","anpRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/anps/ap1","epgs":[{"name":"epg1","displayName":"epg1","epgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/anps/ap1/epgs/epg1","contractRelationships":[],"subnets":[],"uSegEpg":false,"uSegAttrs":[],"intraEpg":"unenforced","proxyArp":false,"preferredGroup":false,"bdRef":"","vrfRef":"","selectors":[]},{"name":"EPG3","displayName":"EPG 3","epgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/anps/ap1/epgs/EPG3","contractRelationships":[],"subnets":[],"uSegEpg":false,"uSegAttrs":[],"intraEpg":"unenforced","proxyArp":false,"bdRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/bds/testBD","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","selectors":[]},{"name":"EPG1","displayName":"EPG 1","epgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/anps/ap1/epgs/EPG1","contractRelationships":[],"subnets":[],"uSegEpg":false,"uSegAttrs":[],"intraEpg":"unenforced","proxyArp":false,"bdRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/bds/testBD","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","selectors":[]}]}],"vrfs":[{"name":"demo","displayName":"demo","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","preferredGroup":false,"vzAnyEnabled":false,"vzAnyProviderContracts":[],"vzAnyConsumerContracts":[]},{"name":"vrf1","displayName":"vrf1","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/vrf1","vzAnyProviderContracts":[],"vzAnyConsumerContracts":[]}],"bds":[{"name":"testBD","displayName":"test","bdRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/bds/testBD","l2UnknownUnicast":"proxy","intersiteBumTrafficAllow":false,"l2Stretch":true,"subnets":[],"vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo"},{"name":"testBD1","displayName":"test1","bdRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/bds/testBD1","l2UnknownUnicast":"proxy","l2Stretch":false,"subnets":[],"vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo"},{"name":"testBD3","displayName":"testwe","bdRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/bds/testBD3","l2UnknownUnicast":"proxy","l2Stretch":false,"subnets":[],"vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","dhcpLabel":{"name":"etes","dhcpOptionLabel":{"name":"demo","version":2},"version":1}}],"contracts":[],"filters":[],"externalEpgs":[{"name":"UntitledExternalEPG1","displayName":"Untitled External EPG 1","extEpgType":"on-premise","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","subnets":[],"selectors":[],"contractRelationships":[{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract95"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template2/contracts/contract5"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template2/contracts/contract5"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template2/contracts/contract1"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract1"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract1"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract500"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract1000"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract499"},{"relationshipType":"consumer","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract1006"}],"preferredGroup":false,"externalEpgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/externalEpgs/UntitledExternalEPG1","l3outRef":"","anpRef":""},{"name":"externalEPG2","displayName":"externalEPG 2","extEpgType":"on-premise","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","subnets":[],"selectors":[],"contractRelationships":[],"externalEpgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/externalEpgs/externalEPG2"},{"name":"externalEPG2","displayName":"externalEPG 2","extEpgType":"on-premise","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","subnets":[],"selectors":[],"contractRelationships":[{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract95"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract200"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract499"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract499"}],"externalEpgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/externalEpgs/externalEPG2"}],"serviceGraphs":[],"intersiteL3outs":[]}],"_updateVersion":186}
2020-05-06T11:28:48.519+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 [DEBUG] Exit from do method
2020-05-06T11:28:48.519+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 uniquetemplate
2020-05-06T11:28:48.519+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 [DEBUG] : Beginning Read
2020-05-06T11:28:48.519+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 HTTP request GET api/v1/schemas/5ea809672c00003bc40a2799
2020-05-06T11:28:48.519+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 [DEBUG] Begin Injection
2020-05-06T11:28:48.519+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 HTTP request POST /api/v1/auth/login
2020-05-06T11:28:48.519+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 HTTP request after injection POST /api/v1/auth/login
2020-05-06T11:28:48.519+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 [DEBUG] Begining DO method https://173.36.219.193/api/v1/auth/login
2020-05-06T11:28:48.981+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 
2020-05-06T11:28:48.981+0530 [DEBUG] plugin.terraform-provider-mso: HTTP Request: POST https://173.36.219.193/api/v1/auth/login
2020-05-06T11:28:48.981+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 nHTTP Response: 201 201 Created &{201 Created 201 HTTP/1.1 1 1 map[Cache-Control:[no-cache] Connection:[keep-alive] Content-Language:[en] Content-Length:[1111] Content-Type:[application/json] Date:[Wed, 06 May 2020 04:30:20 GMT] Expires:[Thu, 01 Jan 1970 00:00:01 GMT] Server:[nginx] Strict-Transport-Security:[max-age=31536000; includeSubDomains] X-Frame-Options:[SAMEORIGIN]] 0xc00027a940 1111 [] false false map[] 0xc0003c3500 0xc0003914a0}
2020-05-06T11:28:48.981+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 
2020-05-06T11:28:48.981+0530 [DEBUG] plugin.terraform-provider-mso:  HTTP response unique string POST https://173.36.219.193/api/v1/auth/login {"userId":"0000ffff0000000000000020","needsPasswordUpdate":false,"token":"eyJ0eXAiOiJKV1QiLCJhbGciOiJIUzI1NiJ9.eyJleHAiOjE1ODg3NDA2MjAsImlhdCI6MTU4ODczOTQyMCwiaXNzIjoiMWUyMWUyNzYzMzRmNGViZThkODRiOGUwZjQ1YzA5OGEiLCJ1c2VySWQiOiIwMDAwZmZmZjAwMDAwMDAwMDAwMDAwMjAiLCJ1c2VybmFtZSI6ImFkbWluIiwicGVybWlzc2lvbnMiOlsidmlldy1zaXRlcyIsInZpZXctdGVuYW50cyIsInZpZXctc2NoZW1hcyIsInZpZXctdGVuYW50LXNjaGVtYXMiLCJ2aWV3LXVzZXJzIiwidmlldy1yb2xlcyIsInZpZXctYWxsLWF1ZGl0LXJlY29yZHMiLCJ2aWV3LWJhY2t1cCIsInZpZXctbGFiZWxzIiwibWFuYWdlLXNpdGVzIiwibWFuYWdlLXRlbmFudHMiLCJtYW5hZ2UtbGFiZWxzIiwibWFuYWdlLXNjaGVtYXMiLCJtYW5hZ2UtdGVuYW50LXNjaGVtYXMiLCJtYW5hZ2UtdXNlcnMiLCJtYW5hZ2Utcm9sZXMiLCJtYW5hZ2UtYXVkaXQtcmVjb3JkcyIsIm1hbmFnZS1iYWNrdXAiLCJtYW5hZ2UtbGFiZWxzIl19.hcCHnHB1tluTirETyy6h_GPW5XrDPBmhT2J41JVKhhQ","permissions":["view-sites","view-tenants","view-schemas","view-tenant-schemas","view-users","view-roles","view-all-audit-records","view-backup","view-labels","manage-sites","manage-tenants","manage-labels","manage-schemas","manage-tenant-schemas","manage-users","manage-roles","manage-audit-records","manage-backup","manage-labels"]}
2020-05-06T11:28:48.981+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 [DEBUG] Exit from do method
2020-05-06T11:28:48.981+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 HTTP request after injection GET api/v1/schemas/5ea809672c00003bc40a2799
2020-05-06T11:28:48.981+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:48 [DEBUG] Begining DO method https://173.36.219.193/api/v1/schemas/5ea809672c00003bc40a2799
2020-05-06T11:28:49.580+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:49 
2020-05-06T11:28:49.580+0530 [DEBUG] plugin.terraform-provider-mso: HTTP Request: GET https://173.36.219.193/api/v1/schemas/5ea809672c00003bc40a2799
2020-05-06T11:28:49.580+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:49 nHTTP Response: 200 200 OK &{200 OK 200 HTTP/1.1 1 1 map[Cache-Control:[no-cache] Connection:[keep-alive] Content-Language:[en] Content-Length:[5714] Content-Type:[application/json] Date:[Wed, 06 May 2020 04:30:21 GMT] Expires:[Thu, 01 Jan 1970 00:00:01 GMT] Server:[nginx] Strict-Transport-Security:[max-age=31536000; includeSubDomains] X-Frame-Options:[SAMEORIGIN]] 0xc00007e240 5714 [] false false map[] 0xc0003c3400 0xc0003914a0}
2020-05-06T11:28:49.581+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:49 
2020-05-06T11:28:49.581+0530 [DEBUG] plugin.terraform-provider-mso:  HTTP response unique string GET https://173.36.219.193/api/v1/schemas/5ea809672c00003bc40a2799 {"id":"5ea809672c00003bc40a2799","displayName":"niravtest","templates":[{"name":"Template1","displayName":"Template1","tenantId":"5e9d09482c000068500a269a","anps":[{"name":"ap1","displayName":"ap1","anpRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/anps/ap1","epgs":[{"name":"epg1","displayName":"epg1","epgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/anps/ap1/epgs/epg1","contractRelationships":[],"subnets":[],"uSegEpg":false,"uSegAttrs":[],"intraEpg":"unenforced","proxyArp":false,"preferredGroup":false,"bdRef":"","vrfRef":"","selectors":[]},{"name":"EPG3","displayName":"EPG 3","epgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/anps/ap1/epgs/EPG3","contractRelationships":[],"subnets":[],"uSegEpg":false,"uSegAttrs":[],"intraEpg":"unenforced","proxyArp":false,"bdRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/bds/testBD","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","selectors":[]},{"name":"EPG1","displayName":"EPG 1","epgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/anps/ap1/epgs/EPG1","contractRelationships":[],"subnets":[],"uSegEpg":false,"uSegAttrs":[],"intraEpg":"unenforced","proxyArp":false,"bdRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/bds/testBD","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","selectors":[]}]}],"vrfs":[{"name":"demo","displayName":"demo","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","preferredGroup":false,"vzAnyEnabled":false,"vzAnyProviderContracts":[],"vzAnyConsumerContracts":[]},{"name":"vrf1","displayName":"vrf1","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/vrf1","vzAnyProviderContracts":[],"vzAnyConsumerContracts":[]}],"bds":[{"name":"testBD","displayName":"test","bdRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/bds/testBD","l2UnknownUnicast":"proxy","intersiteBumTrafficAllow":false,"l2Stretch":true,"subnets":[],"vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo"},{"name":"testBD1","displayName":"test1","bdRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/bds/testBD1","l2UnknownUnicast":"proxy","l2Stretch":false,"subnets":[],"vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo"},{"name":"testBD3","displayName":"testwe","bdRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/bds/testBD3","l2UnknownUnicast":"proxy","l2Stretch":false,"subnets":[],"vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","dhcpLabel":{"name":"etes","dhcpOptionLabel":{"name":"demo","version":2},"version":1}}],"contracts":[],"filters":[],"externalEpgs":[{"name":"UntitledExternalEPG1","displayName":"Untitled External EPG 1","extEpgType":"on-premise","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","subnets":[],"selectors":[],"contractRelationships":[{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract95"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template2/contracts/contract5"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template2/contracts/contract5"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template2/contracts/contract1"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract1"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract1"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract500"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract1000"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract499"},{"relationshipType":"consumer","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/contracts/contract1006"}],"preferredGroup":false,"externalEpgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/externalEpgs/UntitledExternalEPG1","l3outRef":"","anpRef":""},{"name":"externalEPG2","displayName":"externalEPG 2","extEpgType":"on-premise","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","subnets":[],"selectors":[],"contractRelationships":[],"externalEpgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/externalEpgs/externalEPG2"},{"name":"externalEPG2","displayName":"externalEPG 2","extEpgType":"on-premise","vrfRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/vrfs/demo","subnets":[],"selectors":[],"contractRelationships":[{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract95"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract200"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract499"},{"relationshipType":"provider","contractRef":"/schemas/5ea809672c00003bc40a2799/templates/Template5/contracts/contract499"}],"externalEpgRef":"/schemas/5ea809672c00003bc40a2799/templates/Template1/externalEpgs/externalEPG2"}],"serviceGraphs":[],"intersiteL3outs":[]}],"_updateVersion":186}
2020-05-06T11:28:49.581+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:49 [DEBUG] Exit from do method
2020-05-06T11:28:49.581+0530 [DEBUG] plugin.terraform-provider-mso: 2020/05/06 11:28:49 [DEBUG] : Read finished successfully
2020/05/06 11:28:49 [DEBUG] mso_schema_template_filter_entry.filter_entry: apply errored, but we're indicating that via the Error pointer rather than returning it: Provider produced inconsistent result after apply: When applying changes to mso_schema_template_filter_entry.filter_entry, provider "registry.terraform.io/-/mso" produced an unexpected new value for was present, but now absent.

This is a bug in the provider, which should be reported in the provider's own issue tracker.
2020/05/06 11:28:49 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/05/06 11:28:49 [TRACE] EvalMaybeTainted: mso_schema_template_filter_entry.filter_entry encountered an error during creation, so it is now marked as tainted
2020/05/06 11:28:49 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/05/06 11:28:49 [TRACE] EvalWriteState: removing state object for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:49 [TRACE] <root>: eval: *terraform.EvalApplyProvisioners
2020/05/06 11:28:49 [TRACE] EvalApplyProvisioners: mso_schema_template_filter_entry.filter_entry has no state, so skipping provisioners
2020/05/06 11:28:49 [TRACE] <root>: eval: *terraform.EvalMaybeTainted
2020/05/06 11:28:49 [TRACE] EvalMaybeTainted: mso_schema_template_filter_entry.filter_entry encountered an error during creation, so it is now marked as tainted
2020/05/06 11:28:49 [TRACE] <root>: eval: *terraform.EvalWriteState
2020/05/06 11:28:49 [TRACE] EvalWriteState: removing state object for mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:49 [TRACE] <root>: eval: *terraform.EvalIf
2020/05/06 11:28:49 [TRACE] <root>: eval: *terraform.EvalIf
2020/05/06 11:28:49 [TRACE] <root>: eval: *terraform.EvalWriteDiff
2020/05/06 11:28:49 [TRACE] <root>: eval: *terraform.EvalApplyPost
2020/05/06 11:28:49 [ERROR] <root>: eval: *terraform.EvalApplyPost, err: Provider produced inconsistent result after apply: When applying changes to mso_schema_template_filter_entry.filter_entry, provider "registry.terraform.io/-/mso" produced an unexpected new value for was present, but now absent.

This is a bug in the provider, which should be reported in the provider's own issue tracker.
2020/05/06 11:28:49 [ERROR] <root>: eval: *terraform.EvalSequence, err: Provider produced inconsistent result after apply: When applying changes to mso_schema_template_filter_entry.filter_entry, provider "registry.terraform.io/-/mso" produced an unexpected new value for was present, but now absent.

This is a bug in the provider, which should be reported in the provider's own issue tracker.
2020/05/06 11:28:49 [TRACE] [walkApply] Exiting eval tree: mso_schema_template_filter_entry.filter_entry
2020/05/06 11:28:49 [TRACE] vertex "mso_schema_template_filter_entry.filter_entry": visit complete
2020/05/06 11:28:49 [TRACE] dag/walk: upstream of "provider.mso (close)" errored, so skipping
2020/05/06 11:28:49 [TRACE] dag/walk: upstream of "meta.count-boundary (EachMode fixup)" errored, so skipping
2020/05/06 11:28:49 [TRACE] dag/walk: upstream of "root" errored, so skipping
2020/05/06 11:28:49 [TRACE] statemgr.Filesystem: not making a backup, because the new snapshot is identical to the old
2020/05/06 11:28:49 [TRACE] statemgr.Filesystem: no state changes since last snapshot
2020/05/06 11:28:49 [TRACE] statemgr.Filesystem: writing snapshot at terraform.tfstate
2020/05/06 11:28:49 [TRACE] statemgr.Filesystem: removing lock metadata file .terraform.tfstate.lock.info
2020/05/06 11:28:49 [TRACE] statemgr.Filesystem: unlocking terraform.tfstate using fcntl flock
2020-05-06T11:28:49.677+0530 [DEBUG] plugin: plugin process exited: path=/Users/nirav.katarmal/go/bin/terraform-provider-mso pid=60914
2020-05-06T11:28:49.677+0530 [DEBUG] plugin: plugin exited
